<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <name>Automation Tests</name>
    <groupId>com.ionos.cloud</groupId>
    <artifactId>cucumber-tests</artifactId>
    <version>2.0-SNAPSHOT</version>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <surefire.version>3.0.0-M6</surefire.version>
        <testng.config.file>testng.xml</testng.config.file>
        <cucumber.version>7.3.4</cucumber.version>
        <cucumber.jutils.version>8.1</cucumber.jutils.version>
        <guice.version>5.1.0</guice.version>
        <maven-cucumber-reporting.version>5.7.0</maven-cucumber-reporting.version>
        <httpcore.version>4.4.15</httpcore.version>

        <!-- analyze & format -->
        <spotless.version>2.22.5</spotless.version>
        <spotbugs.version>4.7.0.0</spotbugs.version>
        <findsecbugs.version>1.12.0</findsecbugs.version>
        <pmd.version>3.16.0</pmd.version>
        <checkstyle-plugin.version>3.1.2</checkstyle-plugin.version>
        <checkstyle.version>10.2</checkstyle.version>
        <sonar-maven-plugin.version>3.9.1.2184</sonar-maven-plugin.version>

        <!-- SonarCloud setup -->
        <sonar.projectKey>ionos-cloud_cucumber-tests</sonar.projectKey>
        <sonar.organization>ionos-cloud</sonar.organization>
        <sonar.host.url>https://sonarcloud.io</sonar.host.url>
        <sonar.java.spotbugs.reportPaths>./target/spotbugsXml.xml</sonar.java.spotbugs.reportPaths>
        <sonar.java.pmd.reportPaths>./target/pmd.xml</sonar.java.pmd.reportPaths>
        <sonar.java.checkstyle.reportPaths>./target/checkstyle-result.xml</sonar.java.checkstyle.reportPaths>

    </properties>

    <dependencies>
        <!--Official Cucumber dependencies-->
        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>cucumber-java</artifactId>
            <version>${cucumber.version}</version>
        </dependency>
        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>cucumber-guice</artifactId>
            <version>${cucumber.version}</version>
        </dependency>
        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>cucumber-junit</artifactId>
            <version>${cucumber.version}</version>
        </dependency>
        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>cucumber-testng</artifactId>
            <version>${cucumber.version}</version>
        </dependency>
        <!--Other-->
        <dependency>
            <groupId>io.github.fslev</groupId>
            <artifactId>cucumber-jutils</artifactId>
            <version>${cucumber.jutils.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.inject</groupId>
            <artifactId>guice</artifactId>
            <version>${guice.version}</version>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <id>kte</id>
            <properties>
                <env>kte</env>
                <cleanup>0</cleanup>
                <app.config>src/main/resources/config/kte/kte.properties</app.config>
            </properties>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
        </profile>
        <profile>
            <id>kte2</id>
            <properties>
                <env>kte2</env>
                <cleanup>0</cleanup>
                <app.config>src/main/resources/config/kte2/kte2.properties</app.config>
            </properties>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
        </profile>
        <profile>
            <id>stage10</id>
            <properties>
                <env>stage10</env>
                <cleanup>0</cleanup>
                <app.config>src/main/resources/config/stage10/stage10.properties</app.config>

            </properties>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
        </profile>
        <profile>
            <id>stage42</id>
            <properties>
                <env>stage42</env>
                <cleanup>0</cleanup>
                <app.config>src/main/resources/config/stage42/stage42.properties</app.config>

            </properties>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
        </profile>
        <profile>
            <id>ppbeta</id>
            <properties>
                <env>ppbeta</env>
                <cleanup>0</cleanup>
                <app.config>src/main/resources/config/ppbeta/ppbeta.properties</app.config>
            </properties>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
        </profile>
        <profile>
            <id>concurrent</id>
            <activation>
                <property>
                    <name>concurrent</name>
                    <value>true</value>
                </property>
            </activation>
            <properties>
                <testng.config.file>parallel-testng.xml</testng.config.file>
            </properties>
        </profile>

        <!-- Static code analysis with SpotBugs, PMD, Checkstyle -->
        <profile>
            <id>code-analysis</id>
            <build>
                <plugins>
                    <!-- Find bugs with SpotBugs -->
                    <plugin>
                        <groupId>com.github.spotbugs</groupId>
                        <artifactId>spotbugs-maven-plugin</artifactId>
                        <version>${spotbugs.version}</version>
                        <configuration>
                            <excludeFilterFile>spotbugs-exclude.xml</excludeFilterFile>
                            <plugins>
                                <plugin>
                                    <groupId>com.h3xstream.findsecbugs</groupId>
                                    <artifactId>findsecbugs-plugin</artifactId>
                                    <version>${findsecbugs.version}</version>
                                </plugin>
                            </plugins>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>spotbugs</goal>
                                </goals>
                                <phase>compile</phase>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- Find bugs with PMD -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-pmd-plugin</artifactId>
                        <version>${pmd.version}</version>
                        <configuration>
                            <rulesets>
                                <ruleset>ruleset.xml</ruleset>
                            </rulesets>
                            <excludeRoots>
                                <excludeRoot>target/generated-sources/annotations</excludeRoot>
                            </excludeRoots>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>pmd</goal>
                                </goals>
                                <phase>compile</phase>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- Validate code style with Checkstyle -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-checkstyle-plugin</artifactId>
                        <version>${checkstyle-plugin.version}</version>
                        <configuration>
                            <configLocation>google_checks.xml</configLocation>
                            <suppressionsLocation>checkstyle-suppressions.xml</suppressionsLocation>
                        </configuration>
                        <dependencies>
                            <dependency>
                                <groupId>com.puppycrawl.tools</groupId>
                                <artifactId>checkstyle</artifactId>
                                <version>${checkstyle.version}</version>
                            </dependency>
                        </dependencies>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>checkstyle</goal>
                                </goals>
                                <phase>compile</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <!-- send analysis results to SonarCloud -->
            <id>sonar</id>
            <properties>
                <sonar.projectKey>ionos-cloud_cucumber-tests</sonar.projectKey>
                <sonar.organization>ionos-cloud</sonar.organization>
                <sonar.host.url>https://sonarcloud.io</sonar.host.url>
                <sonar.java.spotbugs.reportPaths>./target/spotbugsXml.xml</sonar.java.spotbugs.reportPaths>
                <sonar.java.pmd.reportPaths>./target/pmd.xml</sonar.java.pmd.reportPaths>
                <sonar.java.checkstyle.reportPaths>./target/checkstyle-result.xml</sonar.java.checkstyle.reportPaths>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.sonarsource.scanner.maven</groupId>
                        <artifactId>sonar-maven-plugin</artifactId>
                        <version>${sonar-maven-plugin.version}</version>
                        <executions>
                            <execution>
                                <phase>compile</phase>
                                <goals>
                                    <goal>sonar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <build>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
            </testResource>
            <testResource>
                <directory>src/test/resources/features</directory>
            </testResource>
        </testResources>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
            <resource>
                <directory>src/main/resources/${env}</directory>
            </resource>
        </resources>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.10.1</version>
                <configuration>
                    <source>13</source>
                    <target>13</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${surefire.version}</version>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.logging.log4j</groupId>
                        <artifactId>log4j-api</artifactId>
                        <version>2.17.2</version>
                    </dependency>
                    <dependency>
                        <groupId>org.apache.logging.log4j</groupId>
                        <artifactId>log4j-core</artifactId>
                        <version>2.17.2</version>
                    </dependency>
                    <dependency>
                        <groupId>org.apache.maven.surefire</groupId>
                        <artifactId>surefire-testng</artifactId>
                        <version>${surefire.version}</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <phase>test</phase>
                    </execution>
                </executions>
                <configuration>
                    <systemPropertyVariables>
                        <!--suppress UnresolvedMavenProperty -->
                        <env>${env}</env>
                        <!--suppress UnresolvedMavenProperty -->
                        <cleanup>${cleanup}</cleanup>
                    </systemPropertyVariables>
                    <suiteXmlFiles>
                        <suiteXmlFile>src/test/resources/${testng.config.file}</suiteXmlFile>
                    </suiteXmlFiles>
                </configuration>
            </plugin>
            <plugin>
                <groupId>net.masterthought</groupId>
                <artifactId>maven-cucumber-reporting</artifactId>
                <version>${maven-cucumber-reporting.version}</version>
                <executions>
                    <execution>
                        <id>execution</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <projectName>ionos-cucumber-tests</projectName>
                            <skip>false</skip>
                            <outputDirectory>${project.build.directory}</outputDirectory>
                            <inputDirectory>${project.build.directory}/cucumber-report</inputDirectory>
                            <jsonFiles>
                                <param>**/*.json</param>
                            </jsonFiles>
                            <checkBuildResult>false</checkBuildResult>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- analyze & format -->
            <plugin>
                <!-- apply code formatting rules on every build -->
                <groupId>com.diffplug.spotless</groupId>
                <artifactId>spotless-maven-plugin</artifactId>
                <version>${spotless.version}</version>
                <!-- https://github.com/diffplug/spotless/tree/main/plugin-maven -->
                <executions>
                    <execution>
                        <id>apply-formatting</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>apply</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <formats>
                        <format>
                            <!-- generic text files -->
                            <includes>
                                <include>**/*.http</include>
                                <include>**/*.json</include>
                                <include>**/*.md</include>
                                <include>**/*.properties</include>
                                <include>**/*.sql</include>
                                <include>**/*.xml</include>
                            </includes>
                            <excludes>
                                <!-- files generated on dev machines -->
                                <exclude>.idea/**</exclude>
                                <!-- files generated during builds -->
                                <exclude>target/**</exclude>
                                <!-- files generated in CI pipeline -->
                                <exclude>coverage.*.json</exclude>
                                <exclude>codeclimate.*.json</exclude>
                            </excludes>
                            <trimTrailingWhitespace/>
                            <endWithNewline/>
                            <indent>
                                <spaces>true</spaces>
                                <spacesPerTab>2</spacesPerTab>
                            </indent>
                        </format>
                    </formats>
                    <java>
                        <!-- java code -->
                        <importOrder/>
                        <removeUnusedImports/>
                        <googleJavaFormat>
                            <version>1.12.0</version>
                            <style>GOOGLE</style>
                        </googleJavaFormat>
                    </java>
                    <lineEndings>UNIX</lineEndings>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
